(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{168:function(s,a,n){const l=n(0);s.exports=function(s){Object.keys(s).forEach((function(a){this[a]=s[a]}));return l.createElement("section",{className:"markdown"},l.createElement("h1",null,"css实现平行四边形"),l.createElement("p",null,"在使用简单的 skew()进行拉伸后，我们发现其容器的内容也发生了斜向变形，这是我们不希望看到的，解决这个问题的方法主要有嵌套元素法和伪元素法。"),l.createElement("ul",null,l.createElement("li",null,"方法一：嵌套元素 我们对外层元素 skew(45deg)后，再对内层元素 skew(-45deg)，使内层元素变为原来的样子。")),l.createElement("pre",null,l.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>平行四边形<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">\n        <span class="hljs-selector-tag">div</span>{\n            <span class="hljs-attribute">margin</span>:<span class="hljs-number">50px</span>;\n        }\n        <span class="hljs-selector-class">.paral</span>{\n            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;\n            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;\n            <span class="hljs-attribute">background</span>: lightseagreen;\n            <span class="hljs-attribute">color</span>:white;\n            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;\n            <span class="hljs-attribute">font-weight</span>: bold;\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">skew</span>(-<span class="hljs-number">45deg</span>);\n            <span class="hljs-attribute">display</span>: flex;\n            <span class="hljs-attribute">justify-content</span>: center;\n            <span class="hljs-attribute">align-items</span>: center;\n        }\n        <span class="hljs-selector-class">.in</span>{\n            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">skew</span>(<span class="hljs-number">45deg</span>);\n        }\n    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;paral&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;in&quot;</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>\n'}})),l.createElement("p",null,l.createElement("img",{src:"./media/md/parallel.png",alt:"嵌套元素法实现平行四边形"})),l.createElement("ul",null,l.createElement("li",null,"伪元素法 把与内容无关的样式应用到伪元素上，再对伪元素进行变形即可。")),l.createElement("pre",null,l.createElement("code",{className:"language-css",dangerouslySetInnerHTML:{__html:'<span class="hljs-selector-class">.button</span> {\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;\n  <span class="hljs-attribute">color</span>: white;\n  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">26px</span>;\n  <span class="hljs-attribute">font-weight</span>: bold;\n  <span class="hljs-attribute">text-align</span>: center;\n  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;\n  <span class="hljs-attribute">position</span>: relative;\n}\n<span class="hljs-selector-class">.button</span><span class="hljs-selector-pseudo">::before</span> {\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;\n  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">skew</span>(-<span class="hljs-number">45deg</span>);\n  <span class="hljs-attribute">background</span>: lightseagreen;\n  <span class="hljs-attribute">position</span>: absolute;\n  <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;\n  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;\n  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;\n  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;\n  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;\n}\n'}})),l.createElement("p",null,"这个技巧还适用与于",l.createElement("strong",null,"任何想变形一个元素而不想使其内容受到影响的情况"),"。"))}}}]);
//# sourceMappingURL=19.f765e64697.js.map