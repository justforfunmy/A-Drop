(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{220:function(e,n,l){const s=l(0);e.exports=function(e){Object.keys(e).forEach((function(n){this[n]=e[n]}));return s.createElement("section",{className:"markdown"},s.createElement("h1",null,"小程序路由参数"),s.createElement("ol",null,s.createElement("li",null,"在页面 onLoad 时获取")),s.createElement("pre",null,s.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'onLoad(options){\n    <span class="hljs-comment">//options是一个包含路由参数的对象</span>\n    <span class="hljs-built_in">console</span>.log(options)\n}\n'}})),s.createElement("ol",{start:"2"},s.createElement("li",null,"在任何时候获取")),s.createElement("pre",null,s.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'<span class="hljs-comment">//该函数获取所有栈内的路由</span>\n<span class="hljs-keyword">let</span> pages = getCurrentPages();\n<span class="hljs-comment">//数组中最后一个即当前路由，options是参数</span>\n<span class="hljs-keyword">let</span> { options } = pages.pop();\n<span class="hljs-built_in">console</span>.log(options);\n'}})),s.createElement("ol",{start:"3"},s.createElement("li",null,"mpvue 项目中")),s.createElement("p",null,"在所有 页面 的组件内可以通过",s.createElement("code",{dangerouslySetInnerHTML:{__html:"this.$root.$mp.query"}}),"进行获取页面 onLoad 时的 options 值。"))}}}]);
//# sourceMappingURL=53.ecbc1c788a.js.map