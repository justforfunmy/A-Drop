(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{221:function(e,a,l){const t=l(0);e.exports=function(e){Object.keys(e).forEach((function(a){this[a]=e[a]}));return t.createElement("section",{className:"markdown"},t.createElement("h1",null,"meta 标签的常见应用"),t.createElement("h2",null,"meta 标签"),t.createElement("p",null,t.createElement("code",{dangerouslySetInnerHTML:{__html:"meta"}}),"标签 HTML 语言 head 区域的一个辅助性标签，常用于定义页面的说明，关键字等元数据。",t.createElement("code",{dangerouslySetInnerHTML:{__html:"meta"}}),"标签的属性有：",t.createElement("code",{dangerouslySetInnerHTML:{__html:"name,http-equiv,content,charset"}}),",用法参见",t.createElement("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta"},"MDN")),t.createElement("h3",null,"meta 标签的常见应用"),t.createElement("ul",null,t.createElement("li",null,"声明字符编码,解决乱码问题 ",t.createElement("br",null),"注意：声明",t.createElement("code",{dangerouslySetInnerHTML:{__html:"charset"}}),"要放在第一行")),t.createElement("pre",null,t.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span>\n'}})),t.createElement("ul",null,t.createElement("li",null,"移动段适配")),t.createElement("pre",null,t.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width,initial-scale=1,user-scalable=no,max-scale=1&quot;</span> /&gt;</span>\n'}})),t.createElement("p",null,"content 参数："),t.createElement("ol",null,t.createElement("li",null,"width viewport 宽度(数值/device-width)"),t.createElement("li",null,"height viewport 高度(数值/device-height)"),t.createElement("li",null,"initial-scale 初始缩放比例"),t.createElement("li",null,"maximum-scale 最大缩放比例"),t.createElement("li",null,"minimum-scale 最小缩放比例"),t.createElement("li",null,"user-scalable 是否允许用户缩放(yes/no)")),t.createElement("ul",null,t.createElement("li",null,"SEO 优化")),t.createElement("pre",null,t.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;keywords&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;your keywords&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;descrption&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;your description&quot;</span> /&gt;</span>\n'}})),t.createElement("ul",null,t.createElement("li",null,"百度禁止转码")),t.createElement("pre",null,t.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Cache-Control&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;no-siteapp&quot;</span> /&gt;</span>\n'}})),t.createElement("ul",null,t.createElement("li",null,"忽略页面中的数字识别为电话，忽略 email 识别")),t.createElement("pre",null,t.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;format-detection&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;telphone=no, email=no&quot;</span> /&gt;</span>\n'}})))}}}]);
//# sourceMappingURL=54.83e3ae9998.js.map