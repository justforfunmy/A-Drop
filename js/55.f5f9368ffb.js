(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{204:function(e,n,t){const l=t(0);e.exports=function(e){Object.keys(e).forEach((function(n){this[n]=e[n]}));return l.createElement("section",{className:"markdown"},l.createElement("h1",null,"代码规范和代码美化"),l.createElement("h4",null,"代码规范"),l.createElement("p",null,"工具：Eslint"),l.createElement("ul",null,l.createElement("li",null,"安装")),l.createElement("ol",null,l.createElement("li",null,"使用 npm 或者 yarn 安装")),l.createElement("pre",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"npm install eslint --save-dev\n\n# or\n\nyarn add eslint --dev\n"}})),l.createElement("ol",{start:"2"},l.createElement("li",null,"然后初始化配置文件")),l.createElement("pre",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"npx eslint --init\n"}})),l.createElement("p",null,"按提示完成后会得到 ",l.createElement("code",{dangerouslySetInnerHTML:{__html:"Eslint"}})," 的配置文件",l.createElement("code",{dangerouslySetInnerHTML:{__html:".eslintrc.{js,yml,json}"}})),l.createElement("ol",{start:"3"},l.createElement("li",null,"添加",l.createElement("code",{dangerouslySetInnerHTML:{__html:"standard"}}),"规范")),l.createElement("p",null,l.createElement("a",{href:"https://github.com/standard/eslint-config-standard"},"github 地址")),l.createElement("pre",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"yarn add --dev eslint-config-standard eslint-plugin-standard eslint-plugin-promise eslint-plugin-import eslint-plugin-node\n"}})),l.createElement("p",null,"在你的配置文件中添加："),l.createElement("pre",null,l.createElement("code",{className:"language-json",dangerouslySetInnerHTML:{__html:'<span class="hljs-comment">//.eslintrc.json</span>\n{\n\t<span class="hljs-attr">&quot;extends&quot;</span>: <span class="hljs-string">&quot;standard&quot;</span>\n}\n'}})),l.createElement("ol",{start:"4"},l.createElement("li",null,"添加自定义规则")),l.createElement("p",null,"具体规则内容详见",l.createElement("a",{href:"https://eslint.org/docs/rules/"},"Eslint 官网")),l.createElement("pre",null,l.createElement("code",{className:"language-json",dangerouslySetInnerHTML:{__html:"//.eslintrc.json\n&quot;rules&quot;: {\n\t\t&quot;no-var&quot;: &quot;error&quot;, // preference for let and const only\n\t\t&quot;prefer-const&quot;: &quot;error&quot;,\n\t\t&quot;eqeqeq&quot;: &quot;warn&quot; //  warn to use === instead of ==\n}\n"}})),l.createElement("ol",{start:"5"},l.createElement("li",null,"检查代码")),l.createElement("p",null,"将命令写到",l.createElement("code",{dangerouslySetInnerHTML:{__html:"package.json"}}),"中："),l.createElement("pre",null,l.createElement("code",{className:"language-json",dangerouslySetInnerHTML:{__html:'<span class="hljs-comment">//package.json</span>\n{\n\t<span class="hljs-attr">&quot;scripts&quot;</span>: {\n\t\t<span class="hljs-attr">&quot;lint&quot;</span>: <span class="hljs-string">&quot;./node_modules/.bin/eslint **/*.{js,jsx} --fix&quot;</span>\n\t}\n}\n'}})),l.createElement("p",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"--fix"}}),"选项用于自动修复问题"),l.createElement("h4",null,"代码美化"),l.createElement("p",null,"工具：Prettier"),l.createElement("ol",null,l.createElement("li",null,"安装")),l.createElement("pre",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"yarn add prettier eslint-plugin-prettier eslint-config-prettier --dev\n"}})),l.createElement("p",null,"eslint-plugin-prettier：配置 eslint 使用 prettier 对代码进行格式化"),l.createElement("p",null,"eslint-config-prettier：关闭一些不必要的或者是与 prettier 冲突的 lint 选项。"),l.createElement("ol",{start:"2"},l.createElement("li",null,"配置文件")),l.createElement("p",null,"在项目根目录创建",l.createElement("code",{dangerouslySetInnerHTML:{__html:".prettierrc.js"}}),":"),l.createElement("pre",null,l.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'<span class="hljs-built_in">module</span>.exports = {\n\t<span class="hljs-attr">printWidth</span>: <span class="hljs-number">80</span>, <span class="hljs-comment">//一行的字符数换行</span>\n\t<span class="hljs-attr">tabWidth</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//一个tab代表几个空格数</span>\n\t<span class="hljs-attr">useTabs</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//是否使用tab进行缩进</span>\n\t<span class="hljs-attr">singleQuote</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//字符串是否使用单引号</span>\n\t<span class="hljs-attr">semi</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//行尾是否使用分号，默认为true</span>\n\t<span class="hljs-attr">trailingComma</span>: <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-comment">//是否使用尾逗号</span>\n\t<span class="hljs-attr">bracketSpacing</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//对象大括号直接是否有空格，默认为true，效果：{ foo: bar }</span>\n\t<span class="hljs-attr">endOfLine</span>: <span class="hljs-string">&#x27;auto&#x27;</span>, <span class="hljs-comment">// 保留在 Windows 和 Unix 下的换行符</span>\n}\n'}})),l.createElement("p",null,"自定义选项详见",l.createElement("a",{href:"https://prettier.io/docs/en/options.html"},"prettier 官网")),l.createElement("ol",{start:"3"},l.createElement("li",null,"解决和 eslint 的冲突")),l.createElement("pre",null,l.createElement("code",{className:"language-json",dangerouslySetInnerHTML:{__html:'{\n\t<span class="hljs-attr">&quot;extends&quot;</span>: [<span class="hljs-string">&quot;plugin:prettier/recommended&quot;</span>]\n}\n'}})),l.createElement("ol",{start:"4"},l.createElement("li",null,"编写命令")),l.createElement("pre",null,l.createElement("code",{className:"language-json",dangerouslySetInnerHTML:{__html:'{\n\t<span class="hljs-attr">&quot;scripts&quot;</span>: {\n\t\t<span class="hljs-attr">&quot;format&quot;</span>: <span class="hljs-string">&quot;prettier --write src/**/*.{js,jsx}&quot;</span>\n\t}\n}\n'}})))}}}]);
//# sourceMappingURL=55.f5f9368ffb.js.map