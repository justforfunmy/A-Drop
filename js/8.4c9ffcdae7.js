(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{157:function(e,n,l){const t=l(0);e.exports=function(e){Object.keys(e).forEach((function(n){this[n]=e[n]}));return t.createElement("section",{className:"markdown"},t.createElement("h1",null,"目录结构"),t.createElement("p",null,"创建后，您的项目应如下所示："),t.createElement("pre",null,t.createElement("code",{dangerouslySetInnerHTML:{__html:"my-app/\n  README.md\n  node_modules/\n  package.json\n  public/\n    index.html\n    favicon.ico\n  src/\n    App.css\n    App.js\n    App.test.js\n    index.css\n    index.js\n    logo.svg\n"}})),t.createElement("p",null,"为了构建项目，",t.createElement("strong",null,"这些文件必须使用正确的文件名存在"),"："),t.createElement("ul",null,t.createElement("li",null,t.createElement("p",null,t.createElement("code",{dangerouslySetInnerHTML:{__html:"public/index.html"}}),"是页面模板；")),t.createElement("li",null,t.createElement("p",null,t.createElement("code",{dangerouslySetInnerHTML:{__html:"src/index.js"}}),"是 JavaScript 入口点。"))),t.createElement("p",null,"您可以删除或重命名其他文件。"),t.createElement("p",null,"您可以在 src 中创建子目录。为了加快重建速度，",t.createElement("code",{dangerouslySetInnerHTML:{__html:"webpack"}}),"只处理 src 内部的文件。您需要",t.createElement("strong",null,"将任何 JS 和 CSS 文件放入 src 内"),"，否则",t.createElement("code",{dangerouslySetInnerHTML:{__html:"webpack"}}),"将看不到它们。"),t.createElement("p",null,"只能从",t.createElement("code",{dangerouslySetInnerHTML:{__html:"public/index.html"}}),"使用 public 内部的文件。阅读以下说明，以使用 JavaScript 和 HTML 中的资源。"),t.createElement("p",null,"但是，您可以创建更多顶级目录。它们不会包含在生产版本中，因此您可以将它们用于文档之类的事情。"),t.createElement("p",null,"如果您安装了 Git，并且您的项目不属于较大的存储库，则将初始化一个新的存储库，从而产生一个附加的顶级",t.createElement("code",{dangerouslySetInnerHTML:{__html:".git"}})," 目录。"))}}}]);
//# sourceMappingURL=8.4c9ffcdae7.js.map