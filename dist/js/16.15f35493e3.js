(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{218:function(s,n,a){const l=a(0);s.exports=function(s){Object.keys(s).forEach((function(n){this[n]=s[n]}));return l.createElement("section",{className:"markdown"},l.createElement("h2",null,"小程序登录流程"),l.createElement("p",null,l.createElement("img",{src:a(267).default,alt:"api-login.jpg"})),l.createElement("p",null,"即先发起 wx.login 请求，得到 code 后经第三方服务器想微信服务器发送请求获取 openid，assessToken 等敏感信息，这里我们需要以 assessToken 作为登录状态保持的依据。"),l.createElement("p",null,"####基于 token 的登录状态情况分类 1.首次登录小程序，本地存储中还不存在 token，即需要发起登录请求得到 token，并存到本地存储 2.小程序本地存储中已存在 token，但是已过期，即需要再次发起登录请求以获得 token，并覆盖掉本地存储中原先的 token 3.小程序本地存储中存在 token 且有效，即保持登录状态"),l.createElement("h2",null,"代码实现"),l.createElement("pre",null,l.createElement("code",{className:"language-javascript",dangerouslySetInnerHTML:{__html:'<span class="hljs-comment">//引入插件，使微信api支持promise</span>\n<span class="hljs-keyword">import</span> wxp <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;minapp-api-promise&#x27;</span>;\n\n<span class="hljs-keyword">import</span> Api <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./index&#x27;</span>;\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> code;\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">//微信登录获取token</span>\n    <span class="hljs-keyword">let</span> res = <span class="hljs-keyword">await</span> wxp.login();\n    code = res.code;\n  } <span class="hljs-keyword">catch</span> (err) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;login fail&#x27;</span>);\n  }\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;login code&#x27;</span>, code);\n  <span class="hljs-comment">// wx.setStorageSync(&#x27;code&#x27;, code);</span>\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;get token&#x27;</span>, code);\n    <span class="hljs-comment">//将code传给后端以获得token</span>\n    <span class="hljs-keyword">let</span> res = <span class="hljs-keyword">await</span> Api.loginGetToken(code);\n    <span class="hljs-keyword">let</span> token = res.result.accessToken;\n    <span class="hljs-comment">//将token存到本地存储中</span>\n    wx.setStorageSync(<span class="hljs-string">&#x27;token&#x27;</span>, token);\n    <span class="hljs-comment">//将当前时间存到本地存储</span>\n    <span class="hljs-keyword">let</span> createTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n    wx.setStorageSync(<span class="hljs-string">&#x27;createTime&#x27;</span>, createTime);\n    <span class="hljs-comment">//如有需要，将openid存到本地存储</span>\n    <span class="hljs-keyword">let</span> openId = res.result.openId;\n    wx.setStorageSync(<span class="hljs-string">&#x27;openId&#x27;</span>, openId);\n  } <span class="hljs-keyword">catch</span> (err) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;getToken fail&#x27;</span>);\n  }\n}\n<span class="hljs-comment">//检查登录状态</span>\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkLogin</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;checkLogin&#x27;</span>);\n  <span class="hljs-keyword">let</span> time = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n  <span class="hljs-keyword">let</span> createTime = wx.getStorageSync(<span class="hljs-string">&#x27;createTime&#x27;</span>);\n  <span class="hljs-keyword">let</span> token = wx.getStorageSync(<span class="hljs-string">&#x27;token&#x27;</span>);\n  <span class="hljs-keyword">if</span> (!token) {\n    <span class="hljs-comment">//不存在token，调用登录</span>\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;no token&#x27;</span>);\n    <span class="hljs-keyword">await</span> login();\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (time - createTime &gt; <span class="hljs-number">6</span> * <span class="hljs-number">24</span> * <span class="hljs-number">3600</span> * <span class="hljs-number">1000</span>) {\n    <span class="hljs-comment">//token过期（假设是6天），调用登录</span>\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;token expired&#x27;</span>);\n    <span class="hljs-keyword">await</span> login();\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-comment">//token有效，不做操作</span>\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;already Login&#x27;</span>);\n  }\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  login,\n  checkLogin\n};\n'}})))}},267:function(s,n,a){"use strict";a.r(n),n.default=a.p+"media/images/6db98d6efd32bac03d7082eeb9754cf3.jpg"}}]);
//# sourceMappingURL=16.15f35493e3.js.map