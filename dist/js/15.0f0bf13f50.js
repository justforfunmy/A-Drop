(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{193:function(s,a,n){const l=n(0);s.exports=function(s){Object.keys(s).forEach((function(a){this[a]=s[a]}));return l.createElement("section",{className:"markdown"},l.createElement("h1",null,"HTML 中有关图片处理的几种情况"),l.createElement("h2",null,"背景大图"),l.createElement("p",null,"场景：主页背景图，沾满全屏。"),l.createElement("pre",null,l.createElement("code",{className:"language-css",dangerouslySetInnerHTML:{__html:"&lt;style&gt;\n\t.bg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-image: url(&#x27;./a.png&#x27;);\n\t\tbackground-size: cover;\n\t\tbackground-position: center 0;\n\t}\n&lt;/style&gt;\n"}})),l.createElement("h2",null,"图片在固定宽高的框中居中显示"),l.createElement("p",null,"场景：列表项展示图，外容器固定宽高，但图片尺寸不一，需要在同样的框中显示，图片保持宽高比。"),l.createElement("ul",null,l.createElement("li",null,"方法一：",l.createElement("code",{dangerouslySetInnerHTML:{__html:"object-fit"}}),"+",l.createElement("code",{dangerouslySetInnerHTML:{__html:"object-position"}}))),l.createElement("p",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"object-fit"}})," 属性指定",l.createElement("strong",null,"可替换元素"),"的内容应该如何适应到其使用的高度和宽度确定的框。取值参见",l.createElement("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-fit"},"MDN")),l.createElement("p",null,l.createElement("code",{dangerouslySetInnerHTML:{__html:"object-position"}}),"属性用于指定",l.createElement("strong",null,"可替换元素"),"在内容框中的位置。取值参见",l.createElement("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-position"},"MDN")),l.createElement("p",null,"所谓可替换元素，简单地说，这种元素一般有固定的尺寸，",l.createElement("code",{dangerouslySetInnerHTML:{__html:"CSS"}}),"可以影响该元素的样式，但不能影响元素内容的样式，比如",l.createElement("code",{dangerouslySetInnerHTML:{__html:"img"}}),"标签，浏览器会根据",l.createElement("code",{dangerouslySetInnerHTML:{__html:"src"}}),"属性来渲染该标签，尺寸根据图片内容而定。",l.createElement("code",{dangerouslySetInnerHTML:{__html:"CSS"}}),"可以改变其尺寸，位置，但不能改变其内容的样式。相对的，比如",l.createElement("code",{dangerouslySetInnerHTML:{__html:"div"}}),"元素，",l.createElement("code",{dangerouslySetInnerHTML:{__html:"CSS"}}),"不仅可以影响其本身，也能影响",l.createElement("code",{dangerouslySetInnerHTML:{__html:"div"}}),"里的内容，这样的元素就是非替换元素。"),l.createElement("pre",null,l.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">\n      <span class="hljs-selector-class">.img-wrapper</span> {\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;\n        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightblue;\n        <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;\n        <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;\n      }\n      <span class="hljs-selector-class">.img-wrapper</span> <span class="hljs-selector-tag">img</span> {\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n        <span class="hljs-attribute">object-fit</span>: scale-down;\n        <span class="hljs-attribute">object-position</span>: center;\n      }\n    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-wrapper&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./a.png&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-wrapper&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./b.png&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-wrapper&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./c.png&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>\n'}})),l.createElement("ul",null,l.createElement("li",null,"方法二：作为背景图，利用",l.createElement("code",{dangerouslySetInnerHTML:{__html:"background-size"}}),"规定背景绘制的尺寸,",l.createElement("code",{dangerouslySetInnerHTML:{__html:"background-position"}}),"规定背景位置,",l.createElement("code",{dangerouslySetInnerHTML:{__html:"background-clip"}}),"规定背景绘制的区域")),l.createElement("pre",null,l.createElement("code",{className:"language-html",dangerouslySetInnerHTML:{__html:'<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">\n      <span class="hljs-selector-class">.float</span> {\n        <span class="hljs-attribute">float</span>: left;\n        <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">20px</span>;\n      }\n      <span class="hljs-selector-class">.img-bg</span> {\n        <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;\n        <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;\n        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightblue;\n        <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;\n        <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;\n        <span class="hljs-attribute">box-sizing</span>: border-box;\n        <span class="hljs-attribute">background-size</span>: contain;\n        <span class="hljs-attribute">background-position</span>: center;\n        <span class="hljs-attribute">background-repeat</span>: no-repeat;\n        <span class="hljs-attribute">background-clip</span>: content-box;\n      }\n      <span class="hljs-selector-class">.img-bg</span><span class="hljs-selector-pseudo">:nth-child(1)</span> {\n        <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./a.png&#x27;</span>);\n      }\n      <span class="hljs-selector-class">.img-bg</span><span class="hljs-selector-pseudo">:nth-child(2)</span> {\n        <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./b.png&#x27;</span>);\n      }\n      <span class="hljs-selector-class">.img-bg</span><span class="hljs-selector-pseudo">:nth-child(3)</span> {\n        <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./c.png&#x27;</span>);\n      }\n      <span class="hljs-selector-class">.img-bg</span><span class="hljs-selector-pseudo">:nth-child(4)</span> {\n        <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./d.png&#x27;</span>);\n      }\n    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-bg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-bg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-bg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-bg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>\n'}})),l.createElement("p",null,"两种方法的实际效果根据图片尺寸不同会略有差别，第一列为方法一效果，第二列为方法二效果。根据实际情况选取合适的方法。推荐方法一。"),l.createElement("p",null,l.createElement("img",{src:n(245).default,alt:"demo.jpg"})))}},245:function(s,a,n){"use strict";n.r(a),a.default=n.p+"media/images/f618d75c91d5c7ae62bd2eca38ad93cf.jpg"}}]);
//# sourceMappingURL=15.0f0bf13f50.js.map