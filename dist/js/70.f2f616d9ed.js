(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{219:function(n,e,s){const a=s(0);n.exports=function(n){Object.keys(n).forEach((function(e){this[e]=n[e]}));return a.createElement("section",{className:"markdown"},a.createElement("p",null,"####1.在页面 onLoad 时获取"),a.createElement("pre",null,a.createElement("code",{className:"language-javascript",dangerouslySetInnerHTML:{__html:'onLoad(options){\n    <span class="hljs-comment">//options是一个包含路由参数的对象</span>\n    <span class="hljs-built_in">console</span>.log(options)\n}\n'}})),a.createElement("p",null,"####2.在任何时候获取"),a.createElement("pre",null,a.createElement("code",{className:"language-javascript",dangerouslySetInnerHTML:{__html:'<span class="hljs-comment">//该函数获取所有栈内的路由</span>\n<span class="hljs-keyword">let</span> pages = getCurrentPages();\n<span class="hljs-comment">//数组中最后一个即当前路由，options是参数</span>\n<span class="hljs-keyword">let</span> { options } = pages.pop();\n<span class="hljs-built_in">console</span>.log(options);\n'}})),a.createElement("p",null,"####3.mpvue 项目中 在所有 页面 的组件内可以通过",a.createElement("code",{dangerouslySetInnerHTML:{__html:"this.$root.$mp.query"}}),"进行获取页面 onLoad 时的 options 值。"))}}}]);
//# sourceMappingURL=70.f2f616d9ed.js.map