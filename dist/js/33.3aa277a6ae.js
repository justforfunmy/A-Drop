(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{193:function(e,n,l){const a=l(0);e.exports=function(e){Object.keys(e).forEach((function(n){this[n]=e[n]}));return a.createElement("section",{className:"markdown"},a.createElement("h1",null,"Error 类型"),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",{dangerouslySetInnerHTML:{__html:"EvalError"}}),"创建一个",a.createElement("code",{dangerouslySetInnerHTML:{__html:"error"}}),"实例，表示错误的原因：与 ",a.createElement("code",{dangerouslySetInnerHTML:{__html:"eval()"}}),"有关。"),a.createElement("li",null,a.createElement("code",{dangerouslySetInnerHTML:{__html:"RangeError"}}),"创建一个",a.createElement("code",{dangerouslySetInnerHTML:{__html:"error"}}),"实例，表示错误的原因：数值变量或参数超出其有效范围。")),a.createElement("pre",null,a.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'<span class="hljs-keyword">try</span> {\n  <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">-1</span>);\n} <span class="hljs-keyword">catch</span> (e) {\n  <span class="hljs-built_in">console</span>.log(e); <span class="hljs-comment">//RangeError: Invalid array length</span>\n}\n'}})),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",{dangerouslySetInnerHTML:{__html:"ReferenceError"}}),"创建一个",a.createElement("code",{dangerouslySetInnerHTML:{__html:"error"}}),"实例，表示错误的原因：无效引用。")),a.createElement("pre",null,a.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'<span class="hljs-keyword">try</span> {\n  <span class="hljs-keyword">let</span> a = t + <span class="hljs-number">1</span>;\n} <span class="hljs-keyword">catch</span> (e) {\n  <span class="hljs-built_in">console</span>.log(e); <span class="hljs-comment">//ReferenceError: t is not defined</span>\n}\n'}})),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",{dangerouslySetInnerHTML:{__html:"SyntaxError"}}),"创建一个",a.createElement("code",{dangerouslySetInnerHTML:{__html:"error"}}),"实例，表示错误的原因：",a.createElement("code",{dangerouslySetInnerHTML:{__html:"eval()"}}),"在解析代码的过程中发生的语法错误。")),a.createElement("pre",null,a.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'<span class="hljs-keyword">let</span> <span class="hljs-number">1</span>a=<span class="hljs-number">1</span>;\n<span class="hljs-comment">// Uncaught SyntaxError: Invalid or unexpected token</span>\n'}})),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",{dangerouslySetInnerHTML:{__html:"TypeError"}}),"创建一个",a.createElement("code",{dangerouslySetInnerHTML:{__html:"error"}}),"实例，表示错误的原因：变量或参数不属于有效类型。")),a.createElement("pre",null,a.createElement("code",{className:"language-js",dangerouslySetInnerHTML:{__html:'<span class="hljs-keyword">try</span> {\n  <span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span>;\n  a.push(<span class="hljs-number">1</span>);\n} <span class="hljs-keyword">catch</span> (e) {\n  <span class="hljs-built_in">console</span>.log(e); <span class="hljs-comment">//TypeError: a.push is not a function</span>\n}\n'}})),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",{dangerouslySetInnerHTML:{__html:"URIError"}}),"创建一个",a.createElement("code",{dangerouslySetInnerHTML:{__html:"error"}}),"实例，表示错误的原因：给 ",a.createElement("code",{dangerouslySetInnerHTML:{__html:"encodeURI()"}}),"或 ",a.createElement("code",{dangerouslySetInnerHTML:{__html:"decodeURl()"}}),"传递的参数无效。")))}}}]);
//# sourceMappingURL=33.3aa277a6ae.js.map